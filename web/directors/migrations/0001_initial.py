# Generated by Django 4.0.4 on 2023-01-25 23:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ordering', models.PositiveIntegerField(default=0, verbose_name='ordering')),
                ('email', models.EmailField(max_length=500, unique=True)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('is_staff', models.BooleanField(blank=True, default=True)),
                ('is_superuser', models.BooleanField(blank=True, default=True)),
                ('first_name', models.CharField(max_length=100, verbose_name='prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='nom de famille')),
                ('description', models.TextField(blank=True, max_length=1000, verbose_name='description')),
                ('description_fr', models.TextField(blank=True, max_length=1000, null=True, verbose_name='description')),
                ('description_en', models.TextField(blank=True, max_length=1000, null=True, verbose_name='description')),
                ('profil_image', models.ImageField(blank=True, null=True, upload_to='profil_images/', verbose_name='photo de profil')),
                ('phone_number', models.CharField(blank=True, max_length=30, verbose_name='num de tel')),
                ('job', models.CharField(blank=True, max_length=100, verbose_name='métier')),
                ('job_fr', models.CharField(blank=True, max_length=100, null=True, verbose_name='métier')),
                ('job_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='métier')),
                ('slug', models.SlugField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'utilisateur',
                'verbose_name_plural': 'utilisateurs',
                'ordering': ['ordering'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('presentation_video', models.FileField(blank=True, null=True, upload_to='presentation_videos/', verbose_name='video de présentation')),
            ],
            options={
                'verbose_name': 'catégorie',
                'verbose_name_plural': 'catégories',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='nom')),
                ('url', models.URLField(blank=True, max_length=500, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='contact_logo/')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.PositiveIntegerField(default=0, verbose_name='ordering')),
                ('name', models.CharField(max_length=500, verbose_name='nom')),
                ('name_fr', models.CharField(max_length=500, null=True, verbose_name='nom')),
                ('name_en', models.CharField(max_length=500, null=True, verbose_name='nom')),
                ('video', models.FileField(upload_to='videos/')),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('description_fr', models.TextField(blank=True, max_length=1000, null=True)),
                ('description_en', models.TextField(blank=True, max_length=1000, null=True)),
                ('presentation_video', models.FileField(blank=True, null=True, upload_to='presentation_resume_video/', verbose_name='video de présentation')),
                ('categories', models.ManyToManyField(related_name='videos', to='directors.category')),
                ('directors', models.ManyToManyField(related_name='videos', to=settings.AUTH_USER_MODEL, verbose_name='réalisateurs')),
            ],
            options={
                'verbose_name': 'vidéo',
                'verbose_name_plural': 'vidéos',
                'ordering': ['ordering'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Screenshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.PositiveIntegerField(default=0, verbose_name='ordering')),
                ('screenshot', models.ImageField(upload_to='screenshot')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screenshots', to='directors.video')),
            ],
            options={
                'ordering': ['ordering'],
                'abstract': False,
            },
        ),
    ]
